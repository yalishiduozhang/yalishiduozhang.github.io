<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>欢迎来到亚里士AI说</title>
      <link href="/2025/01/20/%E6%AC%A2%E8%BF%8E%E6%9D%A5%E5%88%B0%E4%BA%9A%E9%87%8C%E5%A3%ABAI%E8%AF%B4/"/>
      <url>/2025/01/20/%E6%AC%A2%E8%BF%8E%E6%9D%A5%E5%88%B0%E4%BA%9A%E9%87%8C%E5%A3%ABAI%E8%AF%B4/</url>
      
        <content type="html"><![CDATA[<h2 id="我是亚里士，一个富有想象力的男孩子"><a href="#我是亚里士，一个富有想象力的男孩子" class="headerlink" title="我是亚里士，一个富有想象力的男孩子"></a>我是亚里士，一个富有想象力的男孩子</h2><p>玩耍，是我们的天性，快乐也是。</p><h2 id="关于这个博客"><a href="#关于这个博客" class="headerlink" title="关于这个博客"></a>关于这个博客</h2><p>这里是我的个人小天地，我会在这里分享:</p><ul><li>有趣的AI知识和见解</li><li>学习编程的心得体会</li><li>生活中的随想感悟</li><li>以及一些有意思的技术探索</li></ul><h2 id="为什么叫”亚里士AI说”？"><a href="#为什么叫”亚里士AI说”？" class="headerlink" title="为什么叫”亚里士AI说”？"></a>为什么叫”亚里士AI说”？</h2><p>亚里士取自亚里士多德的名字，他是古希腊著名的哲学家、科学家。选择这个名字是因为:</p><ol><li>我佩服他，喜欢他。</li><li>他有瑕疵。</li></ol><h2 id="我想要做什么"><a href="#我想要做什么" class="headerlink" title="我想要做什么"></a>我想要做什么</h2><p>在这个博客里，我希望:</p><ul><li>记录学习AI的历程</li><li>分享技术成长的点滴</li><li>与志同道合的朋友交流</li><li>留下一些美好的回忆</li></ul><h2 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h2><blockquote><p>千里之行，始于足下</p></blockquote><p>这是一个新的开始，希望能在这里:</p><ul><li>遇见有趣的你</li><li>分享精彩的故事</li><li>共同进步与成长</li></ul><p>欢迎常来做客，让我们一起探索AI的奇妙世界~</p><hr><p>如果你也对AI感兴趣，欢迎:</p><ul><li>在评论区留言交流</li><li>收藏本站常来看看</li><li>一起探讨技术与生活</li></ul><p>期待与你相遇！ ❤️</p>]]></content>
      
      
      <categories>
          
          <category> 随感 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 闲言碎语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>监督学习模型：从输入到输出的映射</title>
      <link href="/2025/01/20/hello-world/"/>
      <url>/2025/01/20/hello-world/</url>
      
        <content type="html"><![CDATA[<h2 id="监督学习模型的定义"><a href="#监督学习模型的定义" class="headerlink" title="监督学习模型的定义"></a>监督学习模型的定义</h2><p>监督学习模型就是将一个或多个输入转化为一个或多个输出的方式。比如，我们可以将某部二手丰田普锐斯的车龄和行驶里程作为输入，预估的车辆价格则是输出。</p><p>相当于改变参数，然后可以形成一个正确函数进行预测。</p><div class="note success flat"><p>举例：easy-tensorflow中实现的神经网络训练底层就是这个原理，结果一定数量训练将随机生成的梯度往正确梯度上改变，最后实现正确预测。</p></div><h2 id="生成模型与判别模型的区别"><a href="#生成模型与判别模型的区别" class="headerlink" title="生成模型与判别模型的区别"></a>生成模型与判别模型的区别</h2><details><summary>生成 (Generative) 模型与判别 (Discriminative) 模型</summary><ul><li>判别模型就像一个熟练的图片分类员，看到图片就能快速判断</li><li>生成模型就像一个画家，了解狗的特征，可以画出各种狗的图片</li></ul><p>模型 <em>y</em> &#x3D; <em>f</em>[<em>x, ϕ</em>] 属于判别模型。这类模型基于实际测量的数据 x 来预测输出 y。另一种方法是构建生成模型 <em>x</em> &#x3D; <em>g</em>[<em>y, ϕ</em>]，在这种模型中，实际测量的数据 x 被看作是输出 y 的函数。</p><p>虽然生成模型的缺点是它们不直接预测 y，但它们的优势在于能够融入关于数据生成方式的先验知识。比如，如果我们要预测图像 x 中汽车的三维位置和方向 y，我们可以在函数 <em>x</em> &#x3D; <em>g</em>[<em>y, ϕ</em>] 中加入关于汽车形状、三维几何和光传输的知识。</p><p>尽管这听起来是个好主意，但实际上，在现代机器学习中，判别模型更为主流。这是因为在生成模型中利用先验知识所带来的优势通常不及利用大量训练数据来学习灵活的判别模型所获得的优势。</p></details><h2 id="损失函数与成本函数"><a href="#损失函数与成本函数" class="headerlink" title="损失函数与成本函数"></a>损失函数与成本函数</h2><details><summary>损失函数（Loss Function）与成本函数（Cost Function）</summary><p>在机器学习领域，”损失函数”和”成本函数”这两个术语通常可以互换使用。但更准确地说：</p><ul><li>损失函数是指与单个数据点相关的具体项（例如，方程 2.5 中每个平方项）</li><li>成本函数是指需要被最小化的整体量（即方程 2.5 中的整个右侧部分）</li></ul><p>成本函数可能还包含与单个数据点无关的其他项。更广义上，目标函数指的是任何需要最大化或最小化的函数。</p></details><h2 id="思考题与解答"><a href="#思考题与解答" class="headerlink" title="思考题与解答"></a>思考题与解答</h2><details><summary>例题</summary><p><strong>问题 2.1</strong> 为了在损失函数（方程 2.5）上实现”downhill”，我们需要计算它对参数 <em>ϕ</em>0 和 <em>ϕ</em>1 的梯度。请计算出这两个参数的梯度值 <em>∂L</em>&#x2F;<em>∂ϕ</em>0 和 <em>∂L</em>&#x2F;<em>∂ϕ</em>1 的具体表达式。</p><p><strong>问题 2.2</strong> 请证明我们可以通过将问题 2.1 中的导数设置为零，然后求解 <em>ϕ</em>0 和 <em>ϕ</em>1，以闭合形式找到损失函数的最小值。</p><p><strong>问题 2.3</strong> 考虑将线性回归改造为生成模型，形式为 <em>x</em> &#x3D; <em>g</em>[<em>y, ϕ</em>] &#x3D; <em>ϕ</em>0 + <em>ϕ</em>1<em>y</em>。请问这种情况下的新损失函数是什么？</p></details><details><summary>解答</summary><h3 id="问题-2-1-解答"><a href="#问题-2-1-解答" class="headerlink" title="问题 2.1 解答"></a>问题 2.1 解答</h3><p>损失函数L定义为：<br>L &#x3D; ∑(yi - (φ0 + φ1xi))²</p><ol><li><p>计算∂L&#x2F;∂φ0：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">∂L/∂φ0 = ∂/∂φ0 [∑(yi - (φ0 + φ1xi))²]</span><br><span class="line">= ∑ 2(yi - (φ0 + φ1xi)) * (-1)</span><br><span class="line">= -2∑(yi - φ0 - φ1xi)</span><br></pre></td></tr></table></figure></li><li><p>计算∂L&#x2F;∂φ1：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">∂L/∂φ1 = ∂/∂φ1 [∑(yi - (φ0 + φ1xi))²]</span><br><span class="line">= ∑ 2(yi - (φ0 + φ1xi)) * (-xi)</span><br><span class="line">= -2∑(yi - φ0 - φ1xi)xi</span><br></pre></td></tr></table></figure></li></ol><h3 id="问题-2-2-解答"><a href="#问题-2-2-解答" class="headerlink" title="问题 2.2 解答"></a>问题 2.2 解答</h3><p>要找到损失函数的最小值，我们将导数设为零并解方程：</p><p>φ1 &#x3D; (n∑xiyi - ∑xi∑yi) &#x2F; (n∑xi² - (∑xi)²)<br>φ0 &#x3D; (∑yi - φ1∑xi) &#x2F; n</p><p>这种方法只适用于线性回归，因为它具有特殊的二次形式损失函数。</p><h3 id="问题-2-3-解答"><a href="#问题-2-3-解答" class="headerlink" title="问题 2.3 解答"></a>问题 2.3 解答</h3><ol><li>新的生成模型：x &#x3D; g[y, φ] &#x3D; φ0 + φ1y</li><li>新的损失函数：L &#x3D; ∑(xi - (φ0 + φ1yi))²</li><li>逆函数：y &#x3D; (x - φ0) &#x2F; φ1</li></ol><p>在线性回归的情况下，生成模型和判别模型会得到相同的拟合线，但在更复杂的模型中可能不适用。在实践中，判别模型通常更受欢迎，因为它们直接针对预测任务进行优化。</p></details>]]></content>
      
      
      <categories>
          
          <category> AI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
            <tag> 深度学习 </tag>
            
            <tag> 监督学习 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
